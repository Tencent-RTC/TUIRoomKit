{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@tencentcloud/trtc-cloud-wx\"","webpack:///./src/trtc-player.js"],"names":["trtcCloud","TRTCCloud","getTRTCShareInstance","trtc","InterfaceEventEmitter","Component","properties","streamId","String","data","player","TRTCStreamId","lifetimes","attached","getTRTCStreamId","bindTRTCCloudEvent","detached","unbindTRTCCloudEvent","methods","setTRTCStreamId","id","Promise","resolve","reject","setData","err","playerAttributesChange","event","view","playerAttributes","callback","tempArray","split","userId","slice","join","streamType","Number","length","on","off","_playerStateChange","playerEventHandler","_playerFullscreenChange","playerFullscreenChange","_playerNetStatus","playerNetStatus","_playerAudioVolumeNotify","playerAudioVolumeNotify"],"mappings":"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","file":"trtc-player.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"@tencentcloud/trtc-cloud-wx\");","import TRTCCloud, {translateTRTCStreamId} from '@tencentcloud/trtc-cloud-wx'\n\nconst trtcCloud = TRTCCloud.getTRTCShareInstance()\nconst trtc = trtcCloud.trtc\nconst InterfaceEventEmitter = trtcCloud.InterfaceEventEmitter\n\nComponent({\n  properties: {\n    streamId: String\n  },\n  data: {\n    player: {},\n    TRTCStreamId: ''\n  },\n  lifetimes: {\n    attached() {\n      this.data.TRTCStreamId = this.getTRTCStreamId(this.data.streamId)\n      this.bindTRTCCloudEvent()\n    },\n    detached() {\n      this.unbindTRTCCloudEvent()\n    }\n  },\n\n  methods: {\n    // todo room uniapp 特供，因为 uniapp 打包导致组件传惨变量名更替 trtc-player 组建内部无法识别\n    setTRTCStreamId(id) {\n      return new Promise((resolve, reject) => {\n        try {\n          this.data.streamId = id\n          this.data.TRTCStreamId = this.getTRTCStreamId(id)\n          this.setData({streamId: this.data.streamId}, () => {\n            resolve()\n          })\n        } catch (err) {\n          reject(err)\n        }\n      })\n    },\n    playerAttributesChange(event) {\n      const {view, playerAttributes, callback} = event\n      if (view === this.data.streamId) {\n        this.setData({player: playerAttributes}, callback)\n      }\n    },\n    getTRTCStreamId(streamId) {\n      const tempArray = streamId.split('_')\n      const userId = tempArray.slice(0, -1).join('_')\n      const streamType = Number(tempArray[tempArray.length - 1])\n      return translateTRTCStreamId(userId, streamType)\n    },\n    bindTRTCCloudEvent() {\n      InterfaceEventEmitter.on('playerAttributesChange', this.playerAttributesChange, this)\n    },\n    unbindTRTCCloudEvent() {\n      InterfaceEventEmitter.off('playerAttributesChange', this.playerAttributesChange)\n    },\n    // 请保持跟 wxml 中绑定的事件名称一致\n    _playerStateChange(event) {\n      trtc.playerEventHandler(event)\n    },\n    _playerFullscreenChange(event) {\n      trtc.playerFullscreenChange(event)\n    },\n    _playerNetStatus(event) {\n      trtc.playerNetStatus(event)\n    },\n    _playerAudioVolumeNotify(event) {\n      trtc.playerAudioVolumeNotify(event)\n    },\n  }\n})\n"],"sourceRoot":""}